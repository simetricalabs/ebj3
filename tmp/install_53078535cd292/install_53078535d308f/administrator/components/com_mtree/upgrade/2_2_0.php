<?php
/**
 * @package		Mosets Tree
 * @copyright		(C) 2011 Mosets Consulting. All rights reserved.
 * @license		GNU General Public License
 * @author		Lee Cher Yeong <mtree@mosets.com>
 * @url			http://www.mosets.com/tree/
 */

defined('_JEXEC') or die('Restricted access');

class mUpgrade_2_2_0 extends mUpgrade {
	function upgrade() {
		$database =& JFactory::getDBO();
		
		$database->setQuery('UPDATE `#__mt_config` SET `default` = \'kinabalu\' WHERE varname = \'template\' LIMIT 1');
		$database->execute();
		
		$database->setQuery('UPDATE `#__mt_config` SET `value` = \'/components/com_mtree/js/jquery-1.4.4.min.js\', `default` = \'/components/com_mtree/js/jquery-1.4.4.min.js\' WHERE varname = \'relative_path_to_js_library\' LIMIT 1');
		$database->execute();
		
		$database->setQuery('UPDATE `#__mt_fieldtypes` SET ft_class = \'class mFieldType_mFile extends mFieldType_file {\r\n	function getOutput() {\r\n	global $mtconf;\r\n	\r\n		$html = \'\';\r\n		$showCounter 	= $this->getParam(\'showCounter\',1);\r\n		$useImage		= $this->getParam(\'useImage\',\'\');\r\n		$showFilename	= $this->getParam(\'showFilename\',1);\r\n		$showText		= $this->getParam(\'showText\',\'\');\r\n		if(!empty($this->value))\r\n		{\r\n			$html .= \'<a href="\' . $this->getDataAttachmentURL() . \'" target="_blank">\';\r\n			if( !empty($useImage) )\r\n			{\r\n				$live_site = $mtconf->getjconf(\'live_site\');\r\n				$html .= \'<img src="\' . trim(str_replace(\'{live_site}\',$live_site,$useImage)) . \'"\';\r\n				$html .= \' alt=""\';\r\n				$html .= \' /> \';\r\n			} \r\n\r\n			if( !empty($showText) )\r\n			{\r\n				$html .= $showText . \' \';\r\n			}\r\n			\r\n			if( $showFilename == 1 )\r\n			{\r\n				$html .= $this->getValue();\r\n			}\r\n\r\n			$html .= \'</a>\';\r\n		}\r\n\r\n		$append_html = array();\r\n		if( $showCounter ) {\r\n			$append_html[] = JText::sprintf(\'COM_MTREE_NUMBER_OF_VIEWS\', $this->counter);\r\n		}\r\n\r\n		if( !empty($append_html) ) {\r\n			$html .= \' (\' . implode(\', \',$append_html) . \')\';\r\n		}\r\n		return $html;\r\n	}\r\n	function getJSValidation() {\r\n		$fileExtensions = $this->getParam(\'fileExtensions\',\'\');\r\n		if(is_array($fileExtensions)) {\r\n			$fileExtensions = implode(\'|\',$fileExtensions);\r\n		} else {\r\n			$fileExtensions = trim($fileExtensions);\r\n		}\r\n		if(!empty($fileExtensions)) {\r\n			$js = \'\';\r\n			$js .= \'} else if (!hasExt(form.\' .$this->getInputFieldName(1) . \'.value,\\\'\' . $fileExtensions . \'\\\')) {\'; \r\n			$js .= \'alert("\' . addslashes($this->getCaption()) . \': Please select files with these extension(s) - \' . str_replace(\'|\',\', \',$fileExtensions) . \'.");\';\r\n			return $js;\r\n		} else {\r\n			return null;\r\n		}\r\n	}\r\n}\' WHERE field_type = \'mfile\' LIMIT 1');
		$database->execute();
		
		$database->setQuery('ALTER TABLE `#__mt_customfields` ADD INDEX  `published_ordering` (  `published` ,  `ordering` )');
		$database->execute();
		
		// Insert MT kinabalu template if it does not already exists
		$database->setQuery('SELECT tem_id FROM `#__mt_templates` WHERE tem_name = \'kinabalu\';');
		$database->execute();
		
		if( $database->getNumRows() == 0 ) {
			$database->setQuery('INSERT IGNORE INTO `#__mt_templates` VALUES (\'\', \'kinabalu\', \'\');');
			$database->execute();
		}
		
		// Insert Checkbox with Image fieldtype
		$database->setQuery('SELECT ft_id FROM `#__mt_fieldtypes` WHERE field_type = \'checkboxWithImage\' LIMIT 1;');
		$database->execute();
		if( $database->getNumRows() == 0 ) {
			$database->setQuery('INSERT INTO #__mt_fieldtypes VALUES("", "checkboxWithImage", "Checkbox with Image", "class mFieldType_checkboxWithImage extends mFieldType_checkbox {\r\n	\r\n	function getInputHTML() {\r\n		$columns	= $this->getParam(\'columns\',1);\r\n		$useCaptions	= $this->getParam(\'useCaptions\',0);\r\n		$checkboxStyle	= $this->getParam(\'checkboxStyle\',\'\');\r\n\r\n		$i = 0;\r\n		$html = \'\';\r\n		if( $this->getValue() <> \'\' ) {\r\n			$checkbox_values = explode(\"|\",$this->getValue());\r\n		} else {\r\n			$checkbox_values = array();\r\n		}\r\n		foreach($this->arrayFieldElements AS $fieldElement) {\r\n			if($columns > 1) {\r\n				$html .= \'<div style=\"width:\' . floor(100 / $columns) . \'%;float:left;\">\';\r\n			}\r\n			$html .= \'<input type=\"checkbox\" name=\"\' . $this->getInputFieldName(1) . \'[]\" value=\"\'.$fieldElement.\'\" id=\"\' . $this->getInputFieldName(1) . \'_\' . $i . \'\" \';\r\n			if(!empty($checkboxStyle)) {\r\n				$html .= \'style=\"\' . $checkboxStyle . \'\" \';\r\n			}\r\n			if( in_array($fieldElement,$checkbox_values) ) {\r\n				$html .= \'checked \';\r\n			}\r\n			$html .= \'/><label for=\"\' . $this->getInputFieldName(1) . \'_\' . $i . \'\">\';\r\n			\r\n			if( $useCaptions != 0 ) {\r\n				$html .= $this->getCheckboxLabel($i,true);\r\n			} else {\r\n				$html .= $this->getCheckboxLabel($i,false);\r\n			}\r\n			\r\n			$html .= \'</label><br>\';\r\n			if($columns > 1) {\r\n				$html .= \'</div>\';\r\n			}\r\n			$i++;\r\n		}\r\n		return $html;\r\n	}\r\n	\r\n	function getSearchHTML() {\r\n		$columns = $this->getParam(\'columns\',1);\r\n		$checkboxStyle = $this->getParam(\'checkboxStyle\',\'\');\r\n		$imageAlignment = $this->getParam(\'imageAlignment\',\'right\');\r\n		$i = 0;\r\n		$html = \'\';\r\n		foreach($this->arrayFieldElements AS $fieldElement) {\r\n			if($columns > 1) {\r\n				$html .= \'<div style=\"width:\' . floor(100 / $columns) . \'%;float:left;\">\';\r\n			}\r\n			switch($imageAlignment) {\r\n				case \'top\':\r\n				case \'left\':\r\n					$html .= \'<label for=\"\' . $this->getName() . \'_\' . $i . \'\">\';\r\n					$html .= $this->getCheckboxLabel($i);\r\n					$html .= \'</label>\';\r\n					if($imageAlignment == \'top\') {\r\n						$html .= \'<br />\';\r\n					}\r\n					$html .= \'<input type=\"checkbox\" name=\"\' . $this->getName() . \'[]\" value=\"\'.$fieldElement.\'\" id=\"\' . $this->getName() . \'_\' . $i . \'\" \';\r\n					if(!empty($checkboxStyle)) {\r\n						$html .= \'style=\"\' . $checkboxStyle . \'\" \';\r\n					}\r\n					$html .= \'/><br />\';\r\n					break;\r\n				case \'right\':\r\n				default:\r\n					$html .= \'<input type=\"checkbox\" name=\"\' . $this->getName() . \'[]\" value=\"\'.$fieldElement.\'\" id=\"\' . $this->getName() . \'_\' . $i . \'\" />\';\r\n					$html .= \'<label for=\"\' . $this->getName() . \'_\' . $i . \'\">\';\r\n					$html .= $this->getCheckboxLabel($i);\r\n					$html .= \'</label><br />\';\r\n					break;\r\n			}\r\n			if($columns > 1) {\r\n				$html .= \'</div>\';\r\n			}\r\n			$i++;\r\n		}\r\n		return $html;\r\n	}\r\n\r\n	\r\n	function getOutput($view=1) {\r\n		$useCaptions	= $this->getParam(\'useCaptions\',0);\r\n		$arrayValue 	= explode(\'|\',$this->value);\r\n		$arrOutput 		= array();\r\n		\r\n		foreach( $arrayValue AS $value ) {\r\n			if(array_search($value,$this->arrayFieldElements) !== false) {\r\n				if( $useCaptions == 1 ) {\r\n					$arrOutput[] = $this->getCheckboxLabel(array_search($value,$this->arrayFieldElements),true);\r\n				} else {\r\n					$arrOutput[] = $this->getCheckboxLabel(array_search($value,$this->arrayFieldElements),false);\r\n				}\r\n			}\r\n		}\r\n		$html = \'\';\r\n		switch($view) {\r\n			# Details view\r\n			case \'1\':\r\n				$html = \'\';\r\n				switch($this->getParam(\'dvOutput\',\'h\')) {\r\n					case \'ul\':\r\n						$html .= \'<ul><li>\' . implode(\'</li><li>\',$arrOutput). \'</li></ul>\';\r\n						break;\r\n					case \'ol\':\r\n						$html .= \'<ol><li>\' . implode(\'</li><li>\',$arrOutput). \'</li></ol>\';\r\n						break;\r\n					case \'v\':\r\n						$html .= implode(\'<br />\',$arrOutput);\r\n						break;\r\n					case \'h\':\r\n					default:\r\n						$html .= implode(\'&nbsp;\',$arrOutput);\r\n				}\r\n				break;\r\n			# Summary view\r\n			case \'2\':\r\n				$html .= implode(\'&nbsp;\',$arrOutput);\r\n				break;\r\n		}\r\n		return $html;\r\n	}\r\n	\r\n	function getCheckboxLabel($i,$showCaption=true) {\r\n		global $mtconf;\r\n		\r\n		$style 			= $this->getParam(\'style\'		, \'\'	);\r\n		$captions 		= $this->getParam(\'captions\'	, \'\'	);\r\n		$showImages 	= $this->getParam(\'showImages\'	, 1		);\r\n		$useCaptions 	= $this->getParam(\'useCaptions\'	, 0		);\r\n		$alts 			= $this->getParam(\'alts\'		, \'\'	);\r\n		$titles 		= $this->getParam(\'titles\'		, \'\'	);\r\n		$live_site 		= $mtconf->getjconf(\'live_site\'			);\r\n\r\n		if( $showCaption && $useCaptions != 0 ) {\r\n			$useCaptions = true;\r\n		} else {\r\n			$useCaptions = false;\r\n		}\r\n\r\n		$arrImages = $this->getParam(\'images\',\'\');\r\n		$arrAlts = $this->getParam(\'alts\',\'\');\r\n		$arrTitles = $this->getParam(\'titles\',\'\');\r\n		\r\n		if( !is_array($arrImages) ) {\r\n			$arrImages = explode(\"|\",$arrImages);\r\n		}\r\n		if( !is_array($arrAlts) ) {\r\n			$arrAlts = explode(\"|\",$arrAlts);\r\n		}\r\n		if( !is_array($arrTitles) ) {\r\n			$arrTitles = explode(\"|\",$arrTitles);\r\n		}\r\n		\r\n		// if(is_string($arrImages)) {\r\n		// 	$arrImages = array($arrImages);\r\n		// }\r\n		// if(is_string($arrAlts)) {\r\n		// 	$arrAlts = array($arrAlts);\r\n		// }\r\n		// if(is_string($arrTitles)) {\r\n		// 	$arrTitles = array($arrTitles);\r\n		// }\r\n		if(substr($live_site,-1)==\'/\') {\r\n			$live_site = substr($live_site,0,-1);\r\n		}\r\n		\r\n		$arrCaptions = array();\r\n		if($useCaptions && is_string($captions) ) {\r\n			$arrCaptions = explode(\'|\',$captions);\r\n		} elseif( is_array($captions) ) {\r\n			$arrCaptions = $captions;\r\n		}\r\n		\r\n		if(\r\n			is_numeric($i) && isset($arrImages[$i]) && !empty($arrImages[$i])\r\n			&&\r\n			(\r\n				($showImages == 1)\r\n				||\r\n				($showImages == 2 && !$this->inBackEnd())\r\n			)\r\n		) {\r\n			$html = \'\';\r\n			$html .= \'<img\';\r\n			if(!empty($style)) {\r\n				$html .= \' style=\"\' . $style . \'\"\';\r\n			}\r\n			$html .= \' src=\"\' . trim(str_replace(\'{live_site}\',$live_site,$arrImages[$i])) . \'\"\';\r\n			if(isset($arrAlts[$i]) && !empty($arrAlts[$i])) {\r\n				$html .= \' alt=\"\'.htmlspecialchars(trim($arrAlts[$i])).\'\"\';\r\n			} else {\r\n				$html .= \' alt=\"\'.htmlspecialchars(trim($this->arrayFieldElements[$i])).\'\"\';\r\n			}\r\n			if(isset($arrTitles[$i]) && !empty($arrTitles[$i])) {\r\n				$html .= \' title=\"\'.htmlspecialchars(trim(strip_tags($arrTitles[$i]))).\'\"\';\r\n			}\r\n			$html .= \' />\';\r\n			if($useCaptions && isset($arrCaptions[$i]) && !empty($arrCaptions[$i])) {\r\n				$html .= $arrCaptions[$i];\r\n			}\r\n			return $html;\r\n		} elseif( isset($arrCaptions[$i]) && !empty($arrCaptions[$i]) ) {\r\n			return $arrCaptions[$i];\r\n		} else {\r\n			return $this->arrayFieldElements[$i];\r\n			\r\n		}\r\n	}\r\n}", 1, 0, 0, 0, 0);');
			$database->execute();
			$ft_id = $database->insertid();
			
			// Insert checkboxWithImage fieldtype info
			$database->setQuery('INSERT INTO #__mt_fieldtypes_info VALUES("'.$ft_id.'", "14", "http://www.mosets.com", "This field type allows you to use image the check box label.");');
			$database->execute();

			// Update checkboxWithImage params.xml
			$database->setQuery("INSERT INTO #__mt_fieldtypes_att VALUES('', '".$ft_id."', 'params.xml', 0x3c6d6f73706172616d7320747970653d226d6f64756c65223e0a093c706172616d7320616464706174683d222f61646d696e6973747261746f722f636f6d706f6e656e74732f636f6d5f6d747265652f656c656d656e7473223e09090a09093c706172616d206e616d653d22696d616765732220747970653d227069706564746578742220636f6c733d2234302220726f77733d2236222064656661756c743d2222206c6162656c3d22496d6167657322206465736372697074696f6e3d22456e746572207468652055524c73206f6620696d6167657320636f72726573706f6e64696e6720746f2074686520656c656d656e747320646566696e656420666f72207468697320637573746f6d206669656c642e2055524c73206d75737420626520736570617261746564206279207c2e20596f752063616e20757365207b6c6976655f736974657d20617320746865207265706c6163656d656e7420666f72207468652076616c7565206f66206d6f73436f6e6669675f6c6976655f736974652e2069653a207b6c6976655f736974657d2f6d656469612f6d656469612f696d616765732f6d696d652d69636f6e2d33322f7a69702e706e677c7b6c6976655f736974657d2f6d656469612f6d656469612f696d616765732f6d696d652d69636f6e2d33322f6d70332e706e67222f3e0a09093c706172616d206e616d653d2273686f77496d616765732220747970653d226c697374222064656661756c743d223122206c6162656c3d2253686f7720496d6167657322206465736372697074696f6e3d22576865726520746f20646973706c61792074686520696d616765732e223e0a0909093c6f7074696f6e2076616c75653d2230223e4e6f3c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2231223e5965733c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2232223e4f6e6c7920696e2066726f6e742d656e643c2f6f7074696f6e3e0a09093c2f706172616d3e0a09093c706172616d206e616d653d22696d616765416c69676e6d656e742220747970653d226c697374222064656661756c743d22726967687422206c6162656c3d22496d61676520416c69676e6d656e7422206465736372697074696f6e3d2253656c65637420776865726520616e20696d6167652077696c6c20626520646973706c617965642072656c617469766520746865206120636865636b626f782e223e0a0909093c6f7074696f6e2076616c75653d227269676874223e52696768743c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d22746f70223e546f703c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d226c656674223e4c6566743c2f6f7074696f6e3e0a09093c2f706172616d3e0a09093c706172616d206e616d653d227374796c652220747970653d2274657874222073697a653d223434222064656661756c743d2222206c6162656c3d22435353205374796c6522206465736372697074696f6e3d225374796c6520746f206265206170706c69656420746f20696d616765732e2042792064656661756c742c20697420697320656d7074792e2069653a20706f736974696f6e3a72656c61746976653b746f703a3470783b6c6566743a3270783b222f3e0a09093c706172616d206e616d653d22636865636b626f785374796c652220747970653d2274657874222073697a653d223434222064656661756c743d2222206c6162656c3d22436865636b626f78205374796c6522206465736372697074696f6e3d225374796c6520746f206265206170706c69656420746f20636865636b626f7865732e2042792064656661756c742c20697420697320656d7074792e2065673a20706f736974696f6e3a72656c61746976653b6c6566743a2d3270783b222f3e0a09093c706172616d206e616d653d2263617074696f6e732220747970653d227069706564746578742220636f6c733d2234302220726f77733d2236222064656661756c743d2222206c6162656c3d2243617074696f6e7322206465736372697074696f6e3d2243617074696f6e732061726520646973706c6179206265736964652074686520696d61676520746f2070726f7669646520612073686f7274206465736372697074696f6e206f66206561636820636865636b626f782e20456e746572207468652063617074696f6e7320636f72726573706f6e64696e6720746f2074686520656c656d656e747320646566696e656420666f72207468697320637573746f6d206669656c642e2043617074696f6e73206d75737420626520736570617261746564206279207c2e222f3e0a09093c706172616d206e616d653d2275736543617074696f6e732220747970653d226c697374222064656661756c743d223022206c6162656c3d2253686f772043617074696f6e7322206465736372697074696f6e3d22546f67676c652074686520646973706c6179206f662063617074696f6e732e223e0a0909093c6f7074696f6e2076616c75653d2230223e4e6f3c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2231223e5965733c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2232223e4f6e6c7920696e20456469742073637265656e3c2f6f7074696f6e3e0a09093c2f706172616d3e0a09093c706172616d206e616d653d22616c74732220747970653d227069706564746578742220636f6c733d2234302220726f77733d2236222064656661756c743d2222206c6162656c3d22496d61676520414c54732061747472696275746522206465736372697074696f6e3d22414c5473206174747269627574652061726520696e636c7564656420696e20796f757220696d61676520666f72206163636573736962696c69747920616e6420616c6c6f772075736572206167656e747320746861742063616e6e6f7420646973706c617920696d6167657320746f20757365207468697320617320616c7465726e6174656520746578742e204b6565702069742073686f727420616e6420707265636973652e20496620796f75206c65617665207468697320656d7074792c206669656c6420656c656d656e74732077696c6c206265207573656420666f7220746869732e20456e7465722074686520414c5420746578747320636f72726573706f6e64696e6720746f2074686520656c656d656e747320646566696e656420666f72207468697320637573746f6d206669656c642e20414c54207465787473206d75737420626520736570617261746564206279207c2e222f3e0a09093c706172616d206e616d653d227469746c65732220747970653d227069706564746578742220636f6c733d2234302220726f77733d2236222064656661756c743d2222206c6162656c3d22496d616765205449544c45732061747472696275746522206465736372697074696f6e3d22546869732077696c6c20626520616464656420746f20796f757220696d61676573206173205469746c65206174747269627574652e20557365207468697320746f2070726f76696465206164646974696f6e616c20696e666f726d6174696f6e20746f2065616368206f6620796f757220696d616765732e204d6f73742062726f777365727320646973706c6179207469746c652074657874206173206120746f6f6c746970207768656e20697420697320686f7665726564206f7665722e20456e74657220746865205449544c4520746578747320636f72726573706f6e64696e6720746f2074686520656c656d656e747320646566696e656420666f72207468697320637573746f6d206669656c642e205449544c45207465787473206d75737420626520736570617261746564206279207c2e222f3e0a09093c706172616d206e616d653d2264764f75747075742220747970653d226c697374222064656661756c743d226822206c6162656c3d2244657461696c7320766965772773206f7574707574223e0a0909093c6f7074696f6e2076616c75653d22756c223e556e6f726465726564204c6973743c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d226f6c223e4e756d6265726564204c6973743c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2268223e486f72697a6f6e74616c6c793c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2276223e566572746963616c6c793c2f6f7074696f6e3e0a09093c2f706172616d3e0a09093c706172616d206e616d653d22636f6c756d6e732220747970653d226c697374222064656661756c743d223122206c6162656c3d22436f6c756d6e7322206465736372697074696f6e3d22456e74657220746865206e756d626572206f6620636f6c756d6e732e223e0a0909093c6f7074696f6e2076616c75653d2231223e313c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2232223e323c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2233223e333c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2234223e343c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2235223e353c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2236223e363c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2237223e373c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2238223e383c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2239223e393c2f6f7074696f6e3e0a09093c2f706172616d3e0a093c2f706172616d733e0a3c2f6d6f73706172616d733e, 3544, 'text/xml', 1);");
			$database->execute();			
			$this->printStatus( 'Added checkboxWithImage field type.' );
		} else {
			$ft_id = $database->loadResult();
			
			// Update checkboxWithImage class code
			$database->setQuery('UPDATE #__mt_fieldtypes SET ft_class = "class mFieldType_checkboxWithImage extends mFieldType_checkbox {\r\n	\r\n	function getInputHTML() {\r\n		$columns	= $this->getParam(\'columns\',1);\r\n		$useCaptions	= $this->getParam(\'useCaptions\',0);\r\n		$checkboxStyle	= $this->getParam(\'checkboxStyle\',\'\');\r\n\r\n		$i = 0;\r\n		$html = \'\';\r\n		if( $this->getValue() <> \'\' ) {\r\n			$checkbox_values = explode(\"|\",$this->getValue());\r\n		} else {\r\n			$checkbox_values = array();\r\n		}\r\n		foreach($this->arrayFieldElements AS $fieldElement) {\r\n			if($columns > 1) {\r\n				$html .= \'<div style=\"width:\' . floor(100 / $columns) . \'%;float:left;\">\';\r\n			}\r\n			$html .= \'<input type=\"checkbox\" name=\"\' . $this->getInputFieldName(1) . \'[]\" value=\"\'.$fieldElement.\'\" id=\"\' . $this->getInputFieldName(1) . \'_\' . $i . \'\" \';\r\n			if(!empty($checkboxStyle)) {\r\n				$html .= \'style=\"\' . $checkboxStyle . \'\" \';\r\n			}\r\n			if( in_array($fieldElement,$checkbox_values) ) {\r\n				$html .= \'checked \';\r\n			}\r\n			$html .= \'/><label for=\"\' . $this->getInputFieldName(1) . \'_\' . $i . \'\">\';\r\n			\r\n			if( $useCaptions != 0 ) {\r\n				$html .= $this->getCheckboxLabel($i,true);\r\n			} else {\r\n				$html .= $this->getCheckboxLabel($i,false);\r\n			}\r\n			\r\n			$html .= \'</label><br>\';\r\n			if($columns > 1) {\r\n				$html .= \'</div>\';\r\n			}\r\n			$i++;\r\n		}\r\n		return $html;\r\n	}\r\n	\r\n	function getSearchHTML() {\r\n		$columns = $this->getParam(\'columns\',1);\r\n		$checkboxStyle = $this->getParam(\'checkboxStyle\',\'\');\r\n		$imageAlignment = $this->getParam(\'imageAlignment\',\'right\');\r\n		$i = 0;\r\n		$html = \'\';\r\n		foreach($this->arrayFieldElements AS $fieldElement) {\r\n			if($columns > 1) {\r\n				$html .= \'<div style=\"width:\' . floor(100 / $columns) . \'%;float:left;\">\';\r\n			}\r\n			switch($imageAlignment) {\r\n				case \'top\':\r\n				case \'left\':\r\n					$html .= \'<label for=\"\' . $this->getName() . \'_\' . $i . \'\">\';\r\n					$html .= $this->getCheckboxLabel($i);\r\n					$html .= \'</label>\';\r\n					if($imageAlignment == \'top\') {\r\n						$html .= \'<br />\';\r\n					}\r\n					$html .= \'<input type=\"checkbox\" name=\"\' . $this->getName() . \'[]\" value=\"\'.$fieldElement.\'\" id=\"\' . $this->getName() . \'_\' . $i . \'\" \';\r\n					if(!empty($checkboxStyle)) {\r\n						$html .= \'style=\"\' . $checkboxStyle . \'\" \';\r\n					}\r\n					$html .= \'/><br />\';\r\n					break;\r\n				case \'right\':\r\n				default:\r\n					$html .= \'<input type=\"checkbox\" name=\"\' . $this->getName() . \'[]\" value=\"\'.$fieldElement.\'\" id=\"\' . $this->getName() . \'_\' . $i . \'\" />\';\r\n					$html .= \'<label for=\"\' . $this->getName() . \'_\' . $i . \'\">\';\r\n					$html .= $this->getCheckboxLabel($i);\r\n					$html .= \'</label><br />\';\r\n					break;\r\n			}\r\n			if($columns > 1) {\r\n				$html .= \'</div>\';\r\n			}\r\n			$i++;\r\n		}\r\n		return $html;\r\n	}\r\n\r\n	\r\n	function getOutput($view=1) {\r\n		$useCaptions	= $this->getParam(\'useCaptions\',0);\r\n		$arrayValue 	= explode(\'|\',$this->value);\r\n		$arrOutput 		= array();\r\n		\r\n		foreach( $arrayValue AS $value ) {\r\n			if(array_search($value,$this->arrayFieldElements) !== false) {\r\n				if( $useCaptions == 1 ) {\r\n					$arrOutput[] = $this->getCheckboxLabel(array_search($value,$this->arrayFieldElements),true);\r\n				} else {\r\n					$arrOutput[] = $this->getCheckboxLabel(array_search($value,$this->arrayFieldElements),false);\r\n				}\r\n			}\r\n		}\r\n		$html = \'\';\r\n		switch($view) {\r\n			# Details view\r\n			case \'1\':\r\n				$html = \'\';\r\n				switch($this->getParam(\'dvOutput\',\'h\')) {\r\n					case \'ul\':\r\n						$html .= \'<ul><li>\' . implode(\'</li><li>\',$arrOutput). \'</li></ul>\';\r\n						break;\r\n					case \'ol\':\r\n						$html .= \'<ol><li>\' . implode(\'</li><li>\',$arrOutput). \'</li></ol>\';\r\n						break;\r\n					case \'v\':\r\n						$html .= implode(\'<br />\',$arrOutput);\r\n						break;\r\n					case \'h\':\r\n					default:\r\n						$html .= implode(\'&nbsp;\',$arrOutput);\r\n				}\r\n				break;\r\n			# Summary view\r\n			case \'2\':\r\n				$html .= implode(\'&nbsp;\',$arrOutput);\r\n				break;\r\n		}\r\n		return $html;\r\n	}\r\n	\r\n	function getCheckboxLabel($i,$showCaption=true) {\r\n		global $mtconf;\r\n		\r\n		$style 			= $this->getParam(\'style\'		, \'\'	);\r\n		$captions 		= $this->getParam(\'captions\'	, \'\'	);\r\n		$showImages 	= $this->getParam(\'showImages\'	, 1		);\r\n		$useCaptions 	= $this->getParam(\'useCaptions\'	, 0		);\r\n		$alts 			= $this->getParam(\'alts\'		, \'\'	);\r\n		$titles 		= $this->getParam(\'titles\'		, \'\'	);\r\n		$live_site 		= $mtconf->getjconf(\'live_site\'			);\r\n\r\n		if( $showCaption && $useCaptions != 0 ) {\r\n			$useCaptions = true;\r\n		} else {\r\n			$useCaptions = false;\r\n		}\r\n\r\n		$arrImages = $this->getParam(\'images\',\'\');\r\n		$arrAlts = $this->getParam(\'alts\',\'\');\r\n		$arrTitles = $this->getParam(\'titles\',\'\');\r\n		\r\n		if( !is_array($arrImages) ) {\r\n			$arrImages = explode(\"|\",$arrImages);\r\n		}\r\n		if( !is_array($arrAlts) ) {\r\n			$arrAlts = explode(\"|\",$arrAlts);\r\n		}\r\n		if( !is_array($arrTitles) ) {\r\n			$arrTitles = explode(\"|\",$arrTitles);\r\n		}\r\n		\r\n		// if(is_string($arrImages)) {\r\n		// 	$arrImages = array($arrImages);\r\n		// }\r\n		// if(is_string($arrAlts)) {\r\n		// 	$arrAlts = array($arrAlts);\r\n		// }\r\n		// if(is_string($arrTitles)) {\r\n		// 	$arrTitles = array($arrTitles);\r\n		// }\r\n		if(substr($live_site,-1)==\'/\') {\r\n			$live_site = substr($live_site,0,-1);\r\n		}\r\n		\r\n		$arrCaptions = array();\r\n		if($useCaptions && is_string($captions) ) {\r\n			$arrCaptions = explode(\'|\',$captions);\r\n		} elseif( is_array($captions) ) {\r\n			$arrCaptions = $captions;\r\n		}\r\n		\r\n		if(\r\n			is_numeric($i) && isset($arrImages[$i]) && !empty($arrImages[$i])\r\n			&&\r\n			(\r\n				($showImages == 1)\r\n				||\r\n				($showImages == 2 && !$this->inBackEnd())\r\n			)\r\n		) {\r\n			$html = \'\';\r\n			$html .= \'<img\';\r\n			if(!empty($style)) {\r\n				$html .= \' style=\"\' . $style . \'\"\';\r\n			}\r\n			$html .= \' src=\"\' . trim(str_replace(\'{live_site}\',$live_site,$arrImages[$i])) . \'\"\';\r\n			if(isset($arrAlts[$i]) && !empty($arrAlts[$i])) {\r\n				$html .= \' alt=\"\'.htmlspecialchars(trim($arrAlts[$i])).\'\"\';\r\n			} else {\r\n				$html .= \' alt=\"\'.htmlspecialchars(trim($this->arrayFieldElements[$i])).\'\"\';\r\n			}\r\n			if(isset($arrTitles[$i]) && !empty($arrTitles[$i])) {\r\n				$html .= \' title=\"\'.htmlspecialchars(trim(strip_tags($arrTitles[$i]))).\'\"\';\r\n			}\r\n			$html .= \' />\';\r\n			if($useCaptions && isset($arrCaptions[$i]) && !empty($arrCaptions[$i])) {\r\n				$html .= $arrCaptions[$i];\r\n			}\r\n			return $html;\r\n		} elseif( isset($arrCaptions[$i]) && !empty($arrCaptions[$i]) ) {\r\n			return $arrCaptions[$i];\r\n		} else {\r\n			return $this->arrayFieldElements[$i];\r\n			\r\n		}\r\n	}\r\n}"  WHERE field_type = "checkboxWithImage" LIMIT 1');
			$database->execute();

			// Update checkboxWithImage version number
			$database->setQuery('UPDATE #__mt_fieldtypes_info SET ft_version = "14" WHERE ft_id = "'.$ft_id.'" LIMIT 1');
			$database->execute();

			// Update checkboxWithImage params.xml
			$database->setQuery("UPDATE #__mt_fieldtypes_att SET filedata = 0xfilesize = 3544 WHERE ft_id = ".$ft_id." AND filename = 'params.xml' LIMIT 1");
			$database->execute();
			$this->printStatus( 'Updated checkboxWithImage field type to version 14.' );
		}

		// Insert Enhanced Weblink field type
		$database->setQuery('SELECT ft_id FROM `#__mt_fieldtypes` WHERE field_type = \'enhancedWeblink\' LIMIT 1;');
		$database->execute();
		if( $database->getNumRows() == 0 ) {
			$database->setQuery('INSERT INTO #__mt_fieldtypes VALUES("", "enhancedWeblink", "Enhanced Weblink", "class mFieldType_enhancedWeblink extends mFieldType_weblink {\r\n	\r\n	var $acceptedProtocols = array(\'http\',\'https\');\r\n	var $defaultPrefix = \'http://\';\r\n	\r\n	function getJSValidation() {\r\n		$acceptedProtocols = $this->getAcceptedProtocols();\r\n		$arrProtocolRegex = array();\r\n		foreach( $acceptedProtocols AS $acceptedProtocol )\r\n		{\r\n			$arrProtocolRegex[] = $acceptedProtocol . \':\\\\/\\\\/\';\r\n		}\r\n		\r\n		$js = \'\';\r\n		$js .= \'} else if (form.\' .$this->getName() . \'.value != \"\" && /^(\'.implode(\'|\',$arrProtocolRegex).\')?(([a-zA-Z0-9]+\\\\.[a-zA-Z0-9\\\\-]+|[a-zA-Z0-9\\\\-]+)\\\\.[a-zA-Z\\\\.]{2,6}|[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3})(\\\\/[a-zA-Z0-9\\\\.\\\\?=\\\\/#%&\\\\+-]+|\\\\/|)/i.test(form.\' .$this->getName() . \'.value)==false) {\'; \r\n		$js .= \'alert(\"\' . $this->getCaption() . \': \' . JText::_( \'Please enter a valid url\' ) . \'\");\';\r\n		return $js;\r\n	}\r\n\r\n	function parseValue($value)\r\n	{\r\n		$value = trim(strip_tags($value));\r\n		$protocol = substr($value,0,strpos($value,\':\'));\r\n		$acceptedProtocols = $this->getAcceptedProtocols();\r\n		\r\n		if( $protocol !== false )\r\n		{\r\n			if( in_array($protocol,$acceptedProtocols) ) {\r\n				return $value;\r\n			} else {\r\n				return $this->defaultPrefix . $value;\r\n			}\r\n		}\r\n		elseif(!empty($value))\r\n		{\r\n			return $this->defaultPrefix . $value;\r\n		}\r\n		else\r\n		{\r\n			return \'\';\r\n		}\r\n	}\r\n	\r\n	function getAcceptedProtocols()\r\n	{\r\n		$acceptFTP = $this->getParam( \'acceptFTP\', 0 );\r\n		\r\n		$acceptedProtocols = $this->acceptedProtocols;\r\n		if($acceptFTP) {\r\n			array_push($acceptedProtocols,\'ftp\');\r\n		}\r\n\r\n		return $acceptedProtocols;\r\n	}\r\n	\r\n	function getValue($arg=null) \r\n	{ \r\n		if(defined(\'JVERSION\')) {\r\n			$my	=& JFactory::getUser();\r\n		} else {\r\n			global $my;\r\n		}\r\n\r\n		$accessLevel 	= $this->getParam(\'accessLevel\',0);\r\n		$txtLogin 		= $this->getParam(\'txtLogin\',\'\');\r\n\r\n		if($accessLevel >= 1 && $my->id == 0 && empty($txtLogin)) {\r\n			return \'\';\r\n		} else {\r\n			return $this->value;\r\n		}\r\n	}\r\n	\r\n	function getOutput() \r\n	{\r\n		if(defined(\'JVERSION\')) {\r\n			$my	=& JFactory::getUser();\r\n		} else {\r\n			global $my;\r\n		}\r\n		\r\n		$maxUrlLength 			= $this->getParam(\'maxUrlLength\',60);\r\n		$text 					= $this->getParam(\'text\',\'\');\r\n		$title 					= $this->getParam(\'title\',\'\');\r\n		$image					= $this->getParam(\'image\',\'\');\r\n		$openNewWindow 			= $this->getParam(\'openNewWindow\',1);\r\n		$accessLevel 			= $this->getParam(\'accessLevel\',0);\r\n		$txtLogin 				= $this->getParam(\'txtLogin\',\'\');\r\n		$useNofollow			= $this->getParam(\'useNofollow\',0);\r\n		$useGA 					= $this->getParam(\'useGA\',0);\r\n		$gaPageTrackDirectory	= $this->getParam(\'gaPageTrackDirectory\',\'/outgoing/\');\r\n	\r\n		if($accessLevel >= 1 && $my->id == 0) {\r\n			return $txtLogin;\r\n		}\r\n		\r\n		$html = \'\';\r\n		$html .= \'<a href=\"\' . $this->getValue() . \'\"\';\r\n		if( $openNewWindow == 1 ) {\r\n			$html .= \' target=\"_blank\"\';\r\n		}\r\n		if( !empty($title) ) {\r\n			$html .= \' title=\"\' . $title . \'\"\';\r\n		}\r\n		if($useNofollow) {\r\n			$html .= \' rel=\"nofollow\"\';\r\n		}\r\n		if($useGA) {\r\n			$html .= \' onClick=\"javascript: pageTracker._trackPageview(\\\\\'\' . $gaPageTrackDirectory . $this->striphttp($this->getValue()) . \'\\\\\');\"\';\r\n		}\r\n		$html .= \'>\';\r\n		if(!empty($image)) {\r\n			global $mtconf;\r\n			$live_site = $mtconf->getjconf(\'live_site\');\r\n			$html .= \'<img src=\"\' . trim(str_replace(\'{live_site}\',$live_site,$image)) . \'\"\';\r\n			$html .= \' alt=\"\' . $text . \'\"\';\r\n			$html .= \' />\';\r\n		}elseif(!empty($text)) {\r\n			$html .= $text;\r\n		} else {\r\n			$value = $this->striphttp($this->getValue());\r\n			if( empty($maxUrlLength) || $maxUrlLength == 0 ) {\r\n				$html .= $value;\r\n			} else {\r\n				$html .= substr($value,0,$maxUrlLength);\r\n				if( strlen($value) > $maxUrlLength ) {\r\n					$html .= $this->getParam(\'clippedSymbol\');\r\n				}\r\n			}\r\n		}\r\n		$html .= \'</a>\';\r\n		return $html;\r\n	}\r\n	\r\n	function striphttp($url) {\r\n		$return = \'\';\r\n		if(strpos($url,\'://\') !== false) {\r\n			$return = substr($url,(strpos($url,\'://\')+3));\r\n		} else {\r\n			return $url;\r\n		}\r\n		return $return;\r\n	}\r\n}", 1, 0, 0, 0, 0);');
			$database->execute();
			$ft_id = $database->insertid();
			
			// Insert enhancedWeblink field type info
			$database->setQuery('INSERT INTO #__mt_fieldtypes_info VALUES("'.$ft_id.'", "7", "http://www.mosets.com", "");');
			$database->execute();

			// Insert enhancedWeblink params.xml
			$database->setQuery("INSERT INTO #__mt_fieldtypes_att VALUES('', '".$ft_id."', 'params.xml', 0x3c6d6f73706172616d7320747970653d226d6f64756c65223e0a093c706172616d7320616464706174683d222f61646d696e6973747261746f722f636f6d706f6e656e74732f636f6d5f6d747265652f656c656d656e7473223e09090a09093c706172616d206e616d653d22696d616765732220747970653d227069706564746578742220636f6c733d2234302220726f77733d2236222064656661756c743d2222206c6162656c3d22496d6167657322206465736372697074696f6e3d22456e746572207468652055524c73206f6620696d6167657320636f72726573706f6e64696e6720746f2074686520656c656d656e747320646566696e656420666f72207468697320637573746f6d206669656c642e2055524c73206d75737420626520736570617261746564206279207c2e20596f752063616e20757365207b6c6976655f736974657d20617320746865207265706c6163656d656e7420666f72207468652076616c7565206f66206d6f73436f6e6669675f6c6976655f736974652e2069653a207b6c6976655f736974657d2f6d656469612f6d656469612f696d616765732f6d696d652d69636f6e2d33322f7a69702e706e677c7b6c6976655f736974657d2f6d656469612f6d656469612f696d616765732f6d696d652d69636f6e2d33322f6d70332e706e67222f3e0a09093c706172616d206e616d653d2273686f77496d616765732220747970653d226c697374222064656661756c743d223122206c6162656c3d2253686f7720496d6167657322206465736372697074696f6e3d22576865726520746f20646973706c61792074686520696d616765732e223e0a0909093c6f7074696f6e2076616c75653d2230223e4e6f3c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2231223e5965733c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2232223e4f6e6c7920696e2066726f6e742d656e643c2f6f7074696f6e3e0a09093c2f706172616d3e0a09093c706172616d206e616d653d22696d616765416c69676e6d656e742220747970653d226c697374222064656661756c743d22726967687422206c6162656c3d22496d61676520416c69676e6d656e7422206465736372697074696f6e3d2253656c65637420776865726520616e20696d6167652077696c6c20626520646973706c617965642072656c617469766520746865206120636865636b626f782e223e0a0909093c6f7074696f6e2076616c75653d227269676874223e52696768743c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d22746f70223e546f703c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d226c656674223e4c6566743c2f6f7074696f6e3e0a09093c2f706172616d3e0a09093c706172616d206e616d653d227374796c652220747970653d2274657874222073697a653d223434222064656661756c743d2222206c6162656c3d22435353205374796c6522206465736372697074696f6e3d225374796c6520746f206265206170706c69656420746f20696d616765732e2042792064656661756c742c20697420697320656d7074792e2069653a20706f736974696f6e3a72656c61746976653b746f703a3470783b6c6566743a3270783b222f3e0a09093c706172616d206e616d653d22636865636b626f785374796c652220747970653d2274657874222073697a653d223434222064656661756c743d2222206c6162656c3d22436865636b626f78205374796c6522206465736372697074696f6e3d225374796c6520746f206265206170706c69656420746f20636865636b626f7865732e2042792064656661756c742c20697420697320656d7074792e2065673a20706f736974696f6e3a72656c61746976653b6c6566743a2d3270783b222f3e0a09093c706172616d206e616d653d2263617074696f6e732220747970653d227069706564746578742220636f6c733d2234302220726f77733d2236222064656661756c743d2222206c6162656c3d2243617074696f6e7322206465736372697074696f6e3d2243617074696f6e732061726520646973706c6179206265736964652074686520696d61676520746f2070726f7669646520612073686f7274206465736372697074696f6e206f66206561636820636865636b626f782e20456e746572207468652063617074696f6e7320636f72726573706f6e64696e6720746f2074686520656c656d656e747320646566696e656420666f72207468697320637573746f6d206669656c642e2043617074696f6e73206d75737420626520736570617261746564206279207c2e222f3e0a09093c706172616d206e616d653d2275736543617074696f6e732220747970653d226c697374222064656661756c743d223022206c6162656c3d2253686f772043617074696f6e7322206465736372697074696f6e3d22546f67676c652074686520646973706c6179206f662063617074696f6e732e223e0a0909093c6f7074696f6e2076616c75653d2230223e4e6f3c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2231223e5965733c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2232223e4f6e6c7920696e20456469742073637265656e3c2f6f7074696f6e3e0a09093c2f706172616d3e0a09093c706172616d206e616d653d22616c74732220747970653d227069706564746578742220636f6c733d2234302220726f77733d2236222064656661756c743d2222206c6162656c3d22496d61676520414c54732061747472696275746522206465736372697074696f6e3d22414c5473206174747269627574652061726520696e636c7564656420696e20796f757220696d61676520666f72206163636573736962696c69747920616e6420616c6c6f772075736572206167656e747320746861742063616e6e6f7420646973706c617920696d6167657320746f20757365207468697320617320616c7465726e6174656520746578742e204b6565702069742073686f727420616e6420707265636973652e20496620796f75206c65617665207468697320656d7074792c206669656c6420656c656d656e74732077696c6c206265207573656420666f7220746869732e20456e7465722074686520414c5420746578747320636f72726573706f6e64696e6720746f2074686520656c656d656e747320646566696e656420666f72207468697320637573746f6d206669656c642e20414c54207465787473206d75737420626520736570617261746564206279207c2e222f3e0a09093c706172616d206e616d653d227469746c65732220747970653d227069706564746578742220636f6c733d2234302220726f77733d2236222064656661756c743d2222206c6162656c3d22496d616765205449544c45732061747472696275746522206465736372697074696f6e3d22546869732077696c6c20626520616464656420746f20796f757220696d61676573206173205469746c65206174747269627574652e20557365207468697320746f2070726f76696465206164646974696f6e616c20696e666f726d6174696f6e20746f2065616368206f6620796f757220696d616765732e204d6f73742062726f777365727320646973706c6179207469746c652074657874206173206120746f6f6c746970207768656e20697420697320686f7665726564206f7665722e20456e74657220746865205449544c4520746578747320636f72726573706f6e64696e6720746f2074686520656c656d656e747320646566696e656420666f72207468697320637573746f6d206669656c642e205449544c45207465787473206d75737420626520736570617261746564206279207c2e222f3e0a09093c706172616d206e616d653d2264764f75747075742220747970653d226c697374222064656661756c743d226822206c6162656c3d2244657461696c7320766965772773206f7574707574223e0a0909093c6f7074696f6e2076616c75653d22756c223e556e6f726465726564204c6973743c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d226f6c223e4e756d6265726564204c6973743c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2268223e486f72697a6f6e74616c6c793c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2276223e566572746963616c6c793c2f6f7074696f6e3e0a09093c2f706172616d3e0a09093c706172616d206e616d653d22636f6c756d6e732220747970653d226c697374222064656661756c743d223122206c6162656c3d22436f6c756d6e7322206465736372697074696f6e3d22456e74657220746865206e756d626572206f6620636f6c756d6e732e223e0a0909093c6f7074696f6e2076616c75653d2231223e313c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2232223e323c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2233223e333c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2234223e343c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2235223e353c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2236223e363c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2237223e373c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2238223e383c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2239223e393c2f6f7074696f6e3e0a09093c2f706172616d3e0a093c2f706172616d733e0a3c2f6d6f73706172616d733e, 3544, 'text/xml', 1);");
			$database->execute();			
			$this->printStatus( 'Added enhancedWeblink field type.' );
		} else {
			$ft_id = $database->loadResult();
			
			// Update enhancedWeblink class code
			$database->setQuery('UPDATE #__mt_fieldtypes SET ft_class = "class mFieldType_enhancedWeblink extends mFieldType_weblink {\r\n	\r\n	var $acceptedProtocols = array(\'http\',\'https\');\r\n	var $defaultPrefix = \'http://\';\r\n	\r\n	function getJSValidation() {\r\n		$acceptedProtocols = $this->getAcceptedProtocols();\r\n		$arrProtocolRegex = array();\r\n		foreach( $acceptedProtocols AS $acceptedProtocol )\r\n		{\r\n			$arrProtocolRegex[] = $acceptedProtocol . \':\\\\/\\\\/\';\r\n		}\r\n		\r\n		$js = \'\';\r\n		$js .= \'} else if (form.\' .$this->getName() . \'.value != \"\" && /^(\'.implode(\'|\',$arrProtocolRegex).\')?(([a-zA-Z0-9]+\\\\.[a-zA-Z0-9\\\\-]+|[a-zA-Z0-9\\\\-]+)\\\\.[a-zA-Z\\\\.]{2,6}|[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3})(\\\\/[a-zA-Z0-9\\\\.\\\\?=\\\\/#%&\\\\+-]+|\\\\/|)/i.test(form.\' .$this->getName() . \'.value)==false) {\'; \r\n		$js .= \'alert(\"\' . $this->getCaption() . \': \' . JText::_( \'Please enter a valid url\' ) . \'\");\';\r\n		return $js;\r\n	}\r\n\r\n	function parseValue($value)\r\n	{\r\n		$value = trim(strip_tags($value));\r\n		$protocol = substr($value,0,strpos($value,\':\'));\r\n		$acceptedProtocols = $this->getAcceptedProtocols();\r\n		\r\n		if( $protocol !== false )\r\n		{\r\n			if( in_array($protocol,$acceptedProtocols) ) {\r\n				return $value;\r\n			} else {\r\n				return $this->defaultPrefix . $value;\r\n			}\r\n		}\r\n		elseif(!empty($value))\r\n		{\r\n			return $this->defaultPrefix . $value;\r\n		}\r\n		else\r\n		{\r\n			return \'\';\r\n		}\r\n	}\r\n	\r\n	function getAcceptedProtocols()\r\n	{\r\n		$acceptFTP = $this->getParam( \'acceptFTP\', 0 );\r\n		\r\n		$acceptedProtocols = $this->acceptedProtocols;\r\n		if($acceptFTP) {\r\n			array_push($acceptedProtocols,\'ftp\');\r\n		}\r\n\r\n		return $acceptedProtocols;\r\n	}\r\n	\r\n	function getValue($arg=null) \r\n	{ \r\n		if(defined(\'JVERSION\')) {\r\n			$my	=& JFactory::getUser();\r\n		} else {\r\n			global $my;\r\n		}\r\n\r\n		$accessLevel 	= $this->getParam(\'accessLevel\',0);\r\n		$txtLogin 		= $this->getParam(\'txtLogin\',\'\');\r\n\r\n		if($accessLevel >= 1 && $my->id == 0 && empty($txtLogin)) {\r\n			return \'\';\r\n		} else {\r\n			return $this->value;\r\n		}\r\n	}\r\n	\r\n	function getOutput() \r\n	{\r\n		if(defined(\'JVERSION\')) {\r\n			$my	=& JFactory::getUser();\r\n		} else {\r\n			global $my;\r\n		}\r\n		\r\n		$maxUrlLength 			= $this->getParam(\'maxUrlLength\',60);\r\n		$text 					= $this->getParam(\'text\',\'\');\r\n		$title 					= $this->getParam(\'title\',\'\');\r\n		$image					= $this->getParam(\'image\',\'\');\r\n		$openNewWindow 			= $this->getParam(\'openNewWindow\',1);\r\n		$accessLevel 			= $this->getParam(\'accessLevel\',0);\r\n		$txtLogin 				= $this->getParam(\'txtLogin\',\'\');\r\n		$useNofollow			= $this->getParam(\'useNofollow\',0);\r\n		$useGA 					= $this->getParam(\'useGA\',0);\r\n		$gaPageTrackDirectory	= $this->getParam(\'gaPageTrackDirectory\',\'/outgoing/\');\r\n	\r\n		if($accessLevel >= 1 && $my->id == 0) {\r\n			return $txtLogin;\r\n		}\r\n		\r\n		$html = \'\';\r\n		$html .= \'<a href=\"\' . $this->getValue() . \'\"\';\r\n		if( $openNewWindow == 1 ) {\r\n			$html .= \' target=\"_blank\"\';\r\n		}\r\n		if( !empty($title) ) {\r\n			$html .= \' title=\"\' . $title . \'\"\';\r\n		}\r\n		if($useNofollow) {\r\n			$html .= \' rel=\"nofollow\"\';\r\n		}\r\n		if($useGA) {\r\n			$html .= \' onClick=\"javascript: pageTracker._trackPageview(\\\\\'\' . $gaPageTrackDirectory . $this->striphttp($this->getValue()) . \'\\\\\');\"\';\r\n		}\r\n		$html .= \'>\';\r\n		if(!empty($image)) {\r\n			global $mtconf;\r\n			$live_site = $mtconf->getjconf(\'live_site\');\r\n			$html .= \'<img src=\"\' . trim(str_replace(\'{live_site}\',$live_site,$image)) . \'\"\';\r\n			$html .= \' alt=\"\' . $text . \'\"\';\r\n			$html .= \' />\';\r\n		}elseif(!empty($text)) {\r\n			$html .= $text;\r\n		} else {\r\n			$value = $this->striphttp($this->getValue());\r\n			if( empty($maxUrlLength) || $maxUrlLength == 0 ) {\r\n				$html .= $value;\r\n			} else {\r\n				$html .= substr($value,0,$maxUrlLength);\r\n				if( strlen($value) > $maxUrlLength ) {\r\n					$html .= $this->getParam(\'clippedSymbol\');\r\n				}\r\n			}\r\n		}\r\n		$html .= \'</a>\';\r\n		return $html;\r\n	}\r\n	\r\n	function striphttp($url) {\r\n		$return = \'\';\r\n		if(strpos($url,\'://\') !== false) {\r\n			$return = substr($url,(strpos($url,\'://\')+3));\r\n		} else {\r\n			return $url;\r\n		}\r\n		return $return;\r\n	}\r\n}"  WHERE field_type = "enhancedWeblink" LIMIT 1');
			$database->execute();

			// Update enhancedWeblink version number
			$database->setQuery('UPDATE #__mt_fieldtypes_info SET ft_version = "7" WHERE ft_id = "'.$ft_id.'" LIMIT 1');
			$database->execute();

			// Update enhancedWeblink params.xml
			$database->setQuery("UPDATE #__mt_fieldtypes_att SET filedata = 0xfilesize = 3887 WHERE ft_id = ".$ft_id." AND filename = 'params.xml' LIMIT 1");
			$database->execute();
			$this->printStatus( 'Updated enhancedWeblink field type to version 7.' );
		}
		
		// Insert Enhanced Text fieldtype
		$database->setQuery('SELECT ft_id FROM `#__mt_fieldtypes` WHERE field_type = \'enhancedText\' LIMIT 1;');
		$database->execute();
		if( $database->getNumRows() == 0 ) {
			$database->setQuery('INSERT INTO #__mt_fieldtypes VALUES("", "enhancedText", "Enhanced Text", "class mFieldType_enhancedText extends mFieldType {\r\n	function getOutput($view=1) {\r\n		global $mtconf;\r\n\r\n		$params[\'maxSummaryChars\'] 	= intval($this->getParam(\'maxSummaryChars\',55));\r\n		$params[\'maxDetailsChars\'] 	= intval($this->getParam(\'maxDetailsChars\',0));\r\n		$params[\'parseUrl\'] 		= intval($this->getParam(\'parseUrl\',1));\r\n\r\n		$value = $this->getValue();\r\n		$output = \'\';\r\n		if ( $mtconf->get(\'major_version\') == 2 AND $mtconf->get(\'minor_version\')== 0 ) {\r\n			// @TODO Remove this conditional block when Mosets Tree 2.1 is released as stable.\r\n			if($view == 1 AND $params[\'maxDetailsChars\'] > 0 AND $this->strlen_utf8($value) > $params[\'maxDetailsChars\']) {\r\n				$output .= $this->insertBreaks($this->html_cutstr($value,$params[\'maxDetailsChars\']),$view);\r\n				$output .= \'...\';\r\n			} elseif($view == 2 AND $params[\'maxSummaryChars\'] > 0 AND $this->strlen_utf8($value) > $params[\'maxSummaryChars\']) {\r\n				$output .= $this->insertBreaks($this->html_cutstr($value,$params[\'maxSummaryChars\']),$view);\r\n				$output .= \'...\';\r\n			} else {\r\n				$output = $this->insertBreaks($value,$view);\r\n			}\r\n		} else {\r\n			if($view == 1 AND $params[\'maxDetailsChars\'] > 0 AND JString::strlen($value) > $params[\'maxDetailsChars\']) {\r\n				$output .= $this->insertBreaks(JString::substr($value,$params[\'maxDetailsChars\']),$view);\r\n				$output .= \'...\';\r\n			} elseif($view == 2 AND $params[\'maxSummaryChars\'] > 0 AND JString::strlen($value) > $params[\'maxSummaryChars\']) {							\r\n				$output .= $this->insertBreaks(JString::substr($value,0,$params[\'maxSummaryChars\']),$view);\r\n				$output .= \'...\';\r\n			} else {\r\n				$output = $this->insertBreaks($value,$view);\r\n			}\r\n		}\r\n		\r\n		if($view == 1 AND $params[\'parseUrl\']) {\r\n			$regex = \'/http:\\\\/\\\\/(.*?)(\\\\s|$)/i\';\r\n			$output = preg_replace_callback( $regex, array($this,\'linkcreator\'), $output );\r\n		}\r\n		\r\n		return $output;\r\n	}\r\n	function insertBreaks($text,$view) {\r\n		$params[\'preserveNewline\'] = $this->getParam(\'preserveNewline\',1);\r\n		switch($params[\'preserveNewline\']) {\r\n			case 1:\r\n				if($view == 1) {\r\n					$text = nl2br($text);\r\n				}\r\n				break;\r\n			case 2:\r\n				if($view == 2) {\r\n					$text = nl2br($text);\r\n				}\r\n				break;\r\n			case 3:\r\n				$text = nl2br($text);\r\n				break;\r\n			default:\r\n				$text = nl2br($text);\r\n		}\r\n		return $text;\r\n	}\r\n	function getInputHTML() {\r\n		$params[\'inputType\'] = $this->getParam(\'inputType\',1);\r\n		$params[\'cols\'] = $this->getParam(\'cols\',50);\r\n		switch($params[\'inputType\']) {\r\n			case 2:\r\n				$html = \'<textarea name=\"\' . $this->getInputFieldName(1) . \'\" id=\"\' . $this->getInputFieldName(1) . \'\" class=\"inputbox text_area\" cols=\"\' . $params[\'cols\'] . \'\" rows=\"\';\r\n				if($this->size < 2) {\r\n					$html .= 2;\r\n				} else {\r\n					$html .= $this->getSize();\r\n				}\r\n				$html .= \'\">\' . $this->getValue() . \'</textarea>\';\r\n				break;\r\n			default:\r\n				$html = \'<input class=\"inputbox text_area\" type=\"text\" name=\"\' . $this->getInputFieldName(1) . \'\" id=\"\' . $this->getInputFieldName(1) . \'\" size=\"\' . $this->getSize() . \'\" value=\"\' . htmlspecialchars($this->getValue()) . \'\" />\';\r\n				break;\r\n		}\r\n		return $html;\r\n	}\r\n	\r\n}", 1, 0, 0, 0, 0);');
			$database->execute();
			$ft_id = $database->insertid();
			
			// Insert enhancedText fieldtype info
			$database->setQuery('INSERT INTO #__mt_fieldtypes_info VALUES("'.$ft_id.'", "6", "http://www.mosets.com", "A field type based on corename with enhanced features. Parameter to specify the maximum number of characters to display in summary and details view. Ability to use single or multi-line textbox and option to display line breaks for newlines.");');
			$database->execute();

			// Update enhancedText params.xml
			$database->setQuery("INSERT INTO #__mt_fieldtypes_att VALUES('', '".$ft_id."', 'params.xml', 0x3c6d6f73706172616d7320747970653d226d6f64756c65223e0a093c706172616d7320616464706174683d222f61646d696e6973747261746f722f636f6d706f6e656e74732f636f6d5f6d747265652f656c656d656e7473223e09090a09093c706172616d206e616d653d22696d616765732220747970653d227069706564746578742220636f6c733d2234302220726f77733d2236222064656661756c743d2222206c6162656c3d22496d6167657322206465736372697074696f6e3d22456e746572207468652055524c73206f6620696d6167657320636f72726573706f6e64696e6720746f2074686520656c656d656e747320646566696e656420666f72207468697320637573746f6d206669656c642e2055524c73206d75737420626520736570617261746564206279207c2e20596f752063616e20757365207b6c6976655f736974657d20617320746865207265706c6163656d656e7420666f72207468652076616c7565206f66206d6f73436f6e6669675f6c6976655f736974652e2069653a207b6c6976655f736974657d2f6d656469612f6d656469612f696d616765732f6d696d652d69636f6e2d33322f7a69702e706e677c7b6c6976655f736974657d2f6d656469612f6d656469612f696d616765732f6d696d652d69636f6e2d33322f6d70332e706e67222f3e0a09093c706172616d206e616d653d2273686f77496d616765732220747970653d226c697374222064656661756c743d223122206c6162656c3d2253686f7720496d6167657322206465736372697074696f6e3d22576865726520746f20646973706c61792074686520696d616765732e223e0a0909093c6f7074696f6e2076616c75653d2230223e4e6f3c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2231223e5965733c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2232223e4f6e6c7920696e2066726f6e742d656e643c2f6f7074696f6e3e0a09093c2f706172616d3e0a09093c706172616d206e616d653d22696d616765416c69676e6d656e742220747970653d226c697374222064656661756c743d22726967687422206c6162656c3d22496d61676520416c69676e6d656e7422206465736372697074696f6e3d2253656c65637420776865726520616e20696d6167652077696c6c20626520646973706c617965642072656c617469766520746865206120636865636b626f782e223e0a0909093c6f7074696f6e2076616c75653d227269676874223e52696768743c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d22746f70223e546f703c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d226c656674223e4c6566743c2f6f7074696f6e3e0a09093c2f706172616d3e0a09093c706172616d206e616d653d227374796c652220747970653d2274657874222073697a653d223434222064656661756c743d2222206c6162656c3d22435353205374796c6522206465736372697074696f6e3d225374796c6520746f206265206170706c69656420746f20696d616765732e2042792064656661756c742c20697420697320656d7074792e2069653a20706f736974696f6e3a72656c61746976653b746f703a3470783b6c6566743a3270783b222f3e0a09093c706172616d206e616d653d22636865636b626f785374796c652220747970653d2274657874222073697a653d223434222064656661756c743d2222206c6162656c3d22436865636b626f78205374796c6522206465736372697074696f6e3d225374796c6520746f206265206170706c69656420746f20636865636b626f7865732e2042792064656661756c742c20697420697320656d7074792e2065673a20706f736974696f6e3a72656c61746976653b6c6566743a2d3270783b222f3e0a09093c706172616d206e616d653d2263617074696f6e732220747970653d227069706564746578742220636f6c733d2234302220726f77733d2236222064656661756c743d2222206c6162656c3d2243617074696f6e7322206465736372697074696f6e3d2243617074696f6e732061726520646973706c6179206265736964652074686520696d61676520746f2070726f7669646520612073686f7274206465736372697074696f6e206f66206561636820636865636b626f782e20456e746572207468652063617074696f6e7320636f72726573706f6e64696e6720746f2074686520656c656d656e747320646566696e656420666f72207468697320637573746f6d206669656c642e2043617074696f6e73206d75737420626520736570617261746564206279207c2e222f3e0a09093c706172616d206e616d653d2275736543617074696f6e732220747970653d226c697374222064656661756c743d223022206c6162656c3d2253686f772043617074696f6e7322206465736372697074696f6e3d22546f67676c652074686520646973706c6179206f662063617074696f6e732e223e0a0909093c6f7074696f6e2076616c75653d2230223e4e6f3c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2231223e5965733c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2232223e4f6e6c7920696e20456469742073637265656e3c2f6f7074696f6e3e0a09093c2f706172616d3e0a09093c706172616d206e616d653d22616c74732220747970653d227069706564746578742220636f6c733d2234302220726f77733d2236222064656661756c743d2222206c6162656c3d22496d61676520414c54732061747472696275746522206465736372697074696f6e3d22414c5473206174747269627574652061726520696e636c7564656420696e20796f757220696d61676520666f72206163636573736962696c69747920616e6420616c6c6f772075736572206167656e747320746861742063616e6e6f7420646973706c617920696d6167657320746f20757365207468697320617320616c7465726e6174656520746578742e204b6565702069742073686f727420616e6420707265636973652e20496620796f75206c65617665207468697320656d7074792c206669656c6420656c656d656e74732077696c6c206265207573656420666f7220746869732e20456e7465722074686520414c5420746578747320636f72726573706f6e64696e6720746f2074686520656c656d656e747320646566696e656420666f72207468697320637573746f6d206669656c642e20414c54207465787473206d75737420626520736570617261746564206279207c2e222f3e0a09093c706172616d206e616d653d227469746c65732220747970653d227069706564746578742220636f6c733d2234302220726f77733d2236222064656661756c743d2222206c6162656c3d22496d616765205449544c45732061747472696275746522206465736372697074696f6e3d22546869732077696c6c20626520616464656420746f20796f757220696d61676573206173205469746c65206174747269627574652e20557365207468697320746f2070726f76696465206164646974696f6e616c20696e666f726d6174696f6e20746f2065616368206f6620796f757220696d616765732e204d6f73742062726f777365727320646973706c6179207469746c652074657874206173206120746f6f6c746970207768656e20697420697320686f7665726564206f7665722e20456e74657220746865205449544c4520746578747320636f72726573706f6e64696e6720746f2074686520656c656d656e747320646566696e656420666f72207468697320637573746f6d206669656c642e205449544c45207465787473206d75737420626520736570617261746564206279207c2e222f3e0a09093c706172616d206e616d653d2264764f75747075742220747970653d226c697374222064656661756c743d226822206c6162656c3d2244657461696c7320766965772773206f7574707574223e0a0909093c6f7074696f6e2076616c75653d22756c223e556e6f726465726564204c6973743c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d226f6c223e4e756d6265726564204c6973743c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2268223e486f72697a6f6e74616c6c793c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2276223e566572746963616c6c793c2f6f7074696f6e3e0a09093c2f706172616d3e0a09093c706172616d206e616d653d22636f6c756d6e732220747970653d226c697374222064656661756c743d223122206c6162656c3d22436f6c756d6e7322206465736372697074696f6e3d22456e74657220746865206e756d626572206f6620636f6c756d6e732e223e0a0909093c6f7074696f6e2076616c75653d2231223e313c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2232223e323c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2233223e333c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2234223e343c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2235223e353c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2236223e363c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2237223e373c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2238223e383c2f6f7074696f6e3e0a0909093c6f7074696f6e2076616c75653d2239223e393c2f6f7074696f6e3e0a09093c2f706172616d3e0a093c2f706172616d733e0a3c2f6d6f73706172616d733e, 3544, 'text/xml', 1);");
			$database->execute();			
			$this->printStatus( 'Added enhancedText field type.' );
		} else {
			$ft_id = $database->loadResult();
			
			// Update enhancedText class code
			$database->setQuery('UPDATE #__mt_fieldtypes SET ft_class = "class mFieldType_enhancedText extends mFieldType {\r\n	function getOutput($view=1) {\r\n		global $mtconf;\r\n\r\n		$params[\'maxSummaryChars\'] 	= intval($this->getParam(\'maxSummaryChars\',55));\r\n		$params[\'maxDetailsChars\'] 	= intval($this->getParam(\'maxDetailsChars\',0));\r\n		$params[\'parseUrl\'] 		= intval($this->getParam(\'parseUrl\',1));\r\n\r\n		$value = $this->getValue();\r\n		$output = \'\';\r\n		if ( $mtconf->get(\'major_version\') == 2 AND $mtconf->get(\'minor_version\')== 0 ) {\r\n			// @TODO Remove this conditional block when Mosets Tree 2.1 is released as stable.\r\n			if($view == 1 AND $params[\'maxDetailsChars\'] > 0 AND $this->strlen_utf8($value) > $params[\'maxDetailsChars\']) {\r\n				$output .= $this->insertBreaks($this->html_cutstr($value,$params[\'maxDetailsChars\']),$view);\r\n				$output .= \'...\';\r\n			} elseif($view == 2 AND $params[\'maxSummaryChars\'] > 0 AND $this->strlen_utf8($value) > $params[\'maxSummaryChars\']) {\r\n				$output .= $this->insertBreaks($this->html_cutstr($value,$params[\'maxSummaryChars\']),$view);\r\n				$output .= \'...\';\r\n			} else {\r\n				$output = $this->insertBreaks($value,$view);\r\n			}\r\n		} else {\r\n			if($view == 1 AND $params[\'maxDetailsChars\'] > 0 AND JString::strlen($value) > $params[\'maxDetailsChars\']) {\r\n				$output .= $this->insertBreaks(JString::substr($value,$params[\'maxDetailsChars\']),$view);\r\n				$output .= \'...\';\r\n			} elseif($view == 2 AND $params[\'maxSummaryChars\'] > 0 AND JString::strlen($value) > $params[\'maxSummaryChars\']) {							\r\n				$output .= $this->insertBreaks(JString::substr($value,0,$params[\'maxSummaryChars\']),$view);\r\n				$output .= \'...\';\r\n			} else {\r\n				$output = $this->insertBreaks($value,$view);\r\n			}\r\n		}\r\n		\r\n		if($view == 1 AND $params[\'parseUrl\']) {\r\n			$regex = \'/http:\\\\/\\\\/(.*?)(\\\\s|$)/i\';\r\n			$output = preg_replace_callback( $regex, array($this,\'linkcreator\'), $output );\r\n		}\r\n		\r\n		return $output;\r\n	}\r\n	function insertBreaks($text,$view) {\r\n		$params[\'preserveNewline\'] = $this->getParam(\'preserveNewline\',1);\r\n		switch($params[\'preserveNewline\']) {\r\n			case 1:\r\n				if($view == 1) {\r\n					$text = nl2br($text);\r\n				}\r\n				break;\r\n			case 2:\r\n				if($view == 2) {\r\n					$text = nl2br($text);\r\n				}\r\n				break;\r\n			case 3:\r\n				$text = nl2br($text);\r\n				break;\r\n			default:\r\n				$text = nl2br($text);\r\n		}\r\n		return $text;\r\n	}\r\n	function getInputHTML() {\r\n		$params[\'inputType\'] = $this->getParam(\'inputType\',1);\r\n		$params[\'cols\'] = $this->getParam(\'cols\',50);\r\n		switch($params[\'inputType\']) {\r\n			case 2:\r\n				$html = \'<textarea name=\"\' . $this->getInputFieldName(1) . \'\" id=\"\' . $this->getInputFieldName(1) . \'\" class=\"inputbox text_area\" cols=\"\' . $params[\'cols\'] . \'\" rows=\"\';\r\n				if($this->size < 2) {\r\n					$html .= 2;\r\n				} else {\r\n					$html .= $this->getSize();\r\n				}\r\n				$html .= \'\">\' . $this->getValue() . \'</textarea>\';\r\n				break;\r\n			default:\r\n				$html = \'<input class=\"inputbox text_area\" type=\"text\" name=\"\' . $this->getInputFieldName(1) . \'\" id=\"\' . $this->getInputFieldName(1) . \'\" size=\"\' . $this->getSize() . \'\" value=\"\' . htmlspecialchars($this->getValue()) . \'\" />\';\r\n				break;\r\n		}\r\n		return $html;\r\n	}\r\n	\r\n}"  WHERE field_type = "enhancedText" LIMIT 1');
			$database->execute();

			// Update enhancedText version number
			$database->setQuery('UPDATE #__mt_fieldtypes_info SET ft_version = "6" WHERE ft_id = "59" LIMIT 1');
			$database->execute();

			// Update enhancedText params.xml
			$database->setQuery("UPDATE #__mt_fieldtypes_att SET filedata = 0xfilesize = 2068 WHERE ft_id = 59 AND filename = 'params.xml' LIMIT 1");
			$database->execute();
			$this->printStatus( 'Updated enhancedText field type to version 6.' );
		}
		
		updateVersion(2,2,0);
		$this->updated = true;
		return true;
	}
}
?>